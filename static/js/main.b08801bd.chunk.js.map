{"version":3,"sources":["pages/Home.js","components/Footer.js","context/Context.js","pages/Posts.js","pages/Albuns.js","pages/Todos.js","Routes.js","services/fetchApi.js","context/Provider.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","handleClick","route","history","push","className","ButtonGroup","vertical","Button","color","onClick","Footer","to","Context","createContext","Posts","useContext","posts","users","postsFiltered","setPostsFiltered","columns","name","selector","row","id","sortable","userFound","getLsUsers","filter","user","length","searchUser","userId","title","JSON","parse","localStorage","getItem","Input","type","onChange","e","post","match","target","value","console","log","handleChange","placeholder","data","expandableRows","expandableRowsComponent","stringify","body","pagination","persistTableHead","Albuns","albuns","albunsFiltered","setAlbunsFiltered","album","Todos","todos","todosFiltered","setTodosFiltered","completed","todo","Routes","exact","path","component","endpointTodos","fetchTodos","a","fetch","response","json","endpointAlbuns","fetchAlbuns","endpointPosts","fetchPosts","endpointUsers","fetchUsers","Provider","children","useState","setPosts","setAlbuns","setTodos","setUsers","useEffect","window","setItem","fetchApi","dataValue","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b08801bd.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, ButtonGroup } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nfunction Home(props) {\n  const handleClick = (route) => {\n    const { history } = props;\n    history.push(route);\n  };\n\n  return (\n    <>\n      <div className=\"menu\">\n      <h1>MENU</h1>\n      <ButtonGroup vertical>\n        <Button className='font-starjedi' color=\"secondary\" onClick={ () => handleClick('/posts') }\n        >\n          <h5>POSTAGENS</h5>\n        </Button>\n        <Button className='font-starjedi' color=\"secondary\" onClick={ () => handleClick('/albuns')}>\n          <h5>ALBUNS</h5>\n        </Button>\n        <Button className='font-starjedi' color=\"secondary\" onClick={ () => handleClick('/todos')}>\n          <h5>TO-DOs</h5>\n        </Button>\n      </ButtonGroup>\n      </div>\n      <p className='font-starjedi copyright'>© Copyright Stans 2021. All rights reserved</p>\n    </>\n  )\n}\n\nHome.propTypes = {\n  history: PropTypes.array,\n}\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'reactstrap';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer-style\">\n        <Link to=\"/\" className=\"btn-home\">\n          <Button color=\"secondary\">\n            Home\n          </Button>\n        </Link>\n      <p className='font-starjedi copyright'>© Copyright Stans 2021. All rights reserved</p>\n    </footer>\n  )\n}\n\nexport default Footer;\n","import { createContext } from 'react';\n\nconst Context = createContext();\n\nexport default Context;","import React, { useContext } from 'react';\nimport Footer from '../components/Footer';\nimport Context from '../context/Context';\nimport DataTable from 'react-data-table-component';\nimport { Input } from 'reactstrap';\nimport PropTypes from 'prop-types';\nfunction Posts() {\n  const { posts, users, postsFiltered, setPostsFiltered } = useContext(Context);\n  // função que buscará o id do usuário e retornará o nome usuário.\n  // tenho ciência que o ideal seria fazer isso no lado do servidor utilizando uma query com Group\n  // porém, como não tenho acesso direto ao banco desenvolvi esta função\n  // que utiliza como se fosse tabelas diferentes para consultar e atribuir o userId ao name do usuário.\n  const searchUser = (id) => {\n    const usersLocal = users || getLsUsers();\n    const userFound = usersLocal.filter((user) => user.id === id);\n    if(!userFound || userFound.length === 0) return 'Not Found';\n    return userFound[0].name;\n  }\n  const columns = [\n    {\n      name: 'ID',\n      selector: row => row.id,\n      sortable: true \n    },\n    {\n      name: 'USUÁRIO',\n      selector: row => searchUser(row.userId),\n      sortable: true \n    },\n    {\n      name: 'TÍTULO',\n      selector: row => row.title,\n      sortable: true \n    },\n  ];\n  // component que mostra a postagem em si:\n  \n  const ExpandedComponent = ({ data }) => <pre>{JSON.stringify(data.body, null)}</pre>;\n  // as funções getLsPosts e getLsUsers foram criadas porque foi a forma que encontrei de persistir os dados\n  // mesmo se déssemos F5 ba na página da tabela, o provider além de alimentar o Context\n  // alimenta também o localStorage.\n  const getLsPosts = () => {\n    const posts = JSON.parse(localStorage.getItem('posts'));\n    return posts;\n  };\n  const getLsUsers = () => {\n    const users = JSON.parse(localStorage.getItem('users'));\n    return users;\n  };\n  // função que buscará postagens pelo título\n  const handleChange = (e) => {\n    const postsFiltered = posts.filter((post) => post.title.match(e.target.value));\n    console.log(postsFiltered);\n    setPostsFiltered(postsFiltered)\n    // console.log(e.target.value);\n  };\n  return(\n    <>\n      <h1>Postagens</h1>\n      <Input\n        type=\"text\" \n        onChange={ (e) => handleChange(e) } \n        placeholder='Digite um título para buscar'\n        className='input-search'\n      />\n      <div className=\"containerTable table-responsive\">\n        <DataTable \n          columns = { columns }\n          data = { postsFiltered || posts || getLsPosts() }\n          expandableRows\n          expandableRowsComponent={ExpandedComponent}\n          pagination\n          persistTableHead\n        />\n      </div>\n      <Footer />\n    </>\n  )\n}\n\nPosts.propTypes = {\n  data: PropTypes.object,\n  body: PropTypes.string,\n};\n\nexport default Posts;\n","import React, { useContext } from 'react';\nimport Footer from '../components/Footer';\nimport Context from '../context/Context';\nimport DataTable from 'react-data-table-component';\nimport { Input } from 'reactstrap';\n\nfunction Albuns() {\n  const { albuns, users, albunsFiltered, setAlbunsFiltered } = useContext(Context);\n  const searchUser = (id) => {\n    const usersLocal = users || getLsUsers();\n    const userFound = usersLocal.filter((user) => user.id === id);\n    if(!userFound || userFound.length === 0) return 'Not Found';\n    return userFound[0].name;\n  }\n  const columns = [\n    {\n      name: 'ID',\n      selector: row => row.id,\n      sortable: true \n    },\n    {\n      name: 'USUÁRIO',\n      selector: row => searchUser(row.userId),\n      sortable: true \n    },\n    {\n      name: 'TÍTULO',\n      selector: row => row.title,\n      sortable: true \n    },\n  ];\n  const getLsAlbuns = () => {\n    const albuns = JSON.parse(localStorage.getItem('albuns'));\n    return albuns;\n  };\n  const getLsUsers = () => {\n    const users = JSON.parse(localStorage.getItem('users'));\n    return users;\n  };\n  const handleChange = (e) => {\n    const albunsFiltered = albuns.filter((album) => album.title.match(e.target.value));\n    console.log(albunsFiltered);\n    setAlbunsFiltered(albunsFiltered)\n    // console.log(e.target.value);\n  };\n  return(\n    <>\n      <h2>ALBUNS</h2>\n      <Input\n        type=\"text\" \n        onChange={ (e) => handleChange(e) } \n        placeholder='Digite um título para buscar'\n        className='input-search'\n      />\n      <div className=\"containerTable table-responsive\">\n        <DataTable \n          columns = { columns }\n          data = { albunsFiltered || albuns || getLsAlbuns() }\n          pagination\n          persistTableHead\n        />\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default Albuns;\n","import React, { useContext } from 'react';\nimport Footer from '../components/Footer';\nimport Context from '../context/Context';\nimport DataTable from 'react-data-table-component';\nimport { Input } from 'reactstrap';\n\nfunction Todos() {\n  const { users, todos, todosFiltered, setTodosFiltered } = useContext(Context);\n  const searchUser = (id) => {\n    const usersLocal = users || getLsUsers();\n    const userFound = usersLocal.filter((user) => user.id === id);\n    if(!userFound || userFound.length === 0) return 'Not Found';\n    return userFound[0].name;\n  }\n  const createString = (bool) => {\n    if(bool) {\n      return 'SIM';\n    } else {\n      return 'NÃO';\n    }\n  };\n\n  const columns = [\n    {\n      name: 'ID',\n      selector: row => row.id,\n      sortable: true \n    },\n    {\n      name: 'USUÁRIO',\n      selector: row => searchUser(row.userId),\n      sortable: true \n    },\n    {\n      name: 'TÍTULO',\n      selector: row => row.title,\n      sortable: true \n    },\n    {\n      name: 'COMPLETO',\n      selector: row => createString(row.completed),\n      sortable: true\n    }\n  ];\n  const getLsTodos = () => {\n    const todos = JSON.parse(localStorage.getItem('todos'));\n    return todos;\n  }\n  const getLsUsers = () => {\n    const users = JSON.parse(localStorage.getItem('users'));\n    return users;\n  };\n  const handleChange = (e) => {\n    const todosFiltered = todos.filter((todo) => todo.title.match(e.target.value));\n    console.log(todosFiltered);\n    setTodosFiltered(todosFiltered)\n    // console.log(e.target.value);\n  };\n  return (\n    <>\n      <h2>TO-DOs</h2>\n      <Input\n        type=\"text\" \n        onChange={ (e) => handleChange(e) } \n        placeholder='Digite um título para buscar'\n        className='input-search'\n      />\n      <div className=\"containerTable table-responsive\">\n        <DataTable \n          columns = { columns }\n          data = { todosFiltered || todos || getLsTodos() }\n          pagination\n          persistTableHead\n        />\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default Todos;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Posts from './pages/Posts';\nimport Albuns from './pages/Albuns';\nimport Todos from './pages/Todos';\nfunction Routes() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={ Home }/>\n      <Route exact path=\"/posts\" component={ Posts }/>\n      <Route exact path=\"/albuns\" component={ Albuns }/>\n      <Route exact path=\"/todos\" component={ Todos }/>\n    </Switch>\n  )\n}\n\nexport default Routes;\n","// func assíncrona que faz fetch de todas as tarefas da API\nconst endpointTodos = 'https://jsonplaceholder.typicode.com/todos';\nexport async function fetchTodos() {\n  const response = await fetch(endpointTodos);\n  const todos = await response.json();\n  return todos;\n}\n// função assíncrona que faz fetch de todas as fotos da API\nconst endpointPhotos = 'https://jsonplaceholder.typicode.com/photos';\nexport async function fetchPhotos() {\n  const response = await fetch(endpointPhotos);\n  const photos = await response.json();\n  return photos;\n}\n// função assíncrona que faz um fetch de todos os albuns da api\nconst endpointAlbuns = 'https://jsonplaceholder.typicode.com/albums';\nexport async function fetchAlbuns() {\n  const response = fetch(endpointAlbuns);\n  const albuns = await (await response).json();\n  return albuns;\n}\n\n// função assíncrona que faz um fetch de todos os comentários da api\nconst endpointComments = 'https://jsonplaceholder.typicode.com/comments';\nexport async function fetchComments() {\n  const response = fetch(endpointComments);\n  const comments = await (await response).json();\n  return comments;\n}\n\n// função assíncrona que faz um fetch de todos os posts da API\nconst endpointPosts = 'https://jsonplaceholder.typicode.com/posts';\nexport async function fetchPosts() {\n  const response = await fetch(endpointPosts);\n  const posts = await response.json();\n  return posts;\n}\n// função assíncrona que faz um fetch de todos os usuários a API\n// utilizarei para correlacionar com os posts, comments e to-dos.\nconst endpointUsers = 'https://jsonplaceholder.typicode.com/users';\nexport async function fetchUsers() {\n  const response = await fetch(endpointUsers);\n  const users = await response.json();\n  return users;\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  fetchPosts,\n  fetchAlbuns,\n  fetchTodos,\n  fetchUsers,\n} from '../services/fetchApi';\nimport Context from './Context';\nimport { node } from 'prop-types';\n\nfunction Provider({ children }) {\n  const [posts, setPosts] = useState([]);\n  const [albuns, setAlbuns] = useState([]);\n  const [todos, setTodos] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [postsFiltered, setPostsFiltered] = useState([]);\n  const [albunsFiltered, setAlbunsFiltered ] = useState([]);\n  const [todosFiltered, setTodosFiltered] = useState([]);\n  // funções que serão chamadas quando o Provider for renderizado, o Provider encontra-se no App.js.\n  // essa funções farão o fetch dos dados da API e setarão nas variáveis de state do Context.\n  // então todos os componentes que estão dentro do Contexto terão acesso à esses dados.\n  function getPosts() { // esta pega e seta as postagens.\n    const fetchApi = async () => {\n      const posts = await fetchPosts();\n      if(!posts) {\n        console.log('Erro ao buscar postagens.\\n');\n      }\n      setPosts(posts); // será setado um array vazio caso o get falhe.\n      setPostsFiltered(posts); // setando o filtro para corrigir o fato da tabela ficar vazia na primeira renderização\n    }\n    fetchApi();\n  }\n\n  function getAlbuns() { // esta função pega e seta os albuns.\n    const fetchApi = async () => {\n      const albuns = await fetchAlbuns();\n      if(!albuns) {\n        console.log('Erro ao buscar albuns.\\n');\n      }\n      setAlbuns(albuns);\n      setAlbunsFiltered(albuns); // setando filtro p/ corrigir problema da tabela ficar vazia na primeira renderização.\n    }\n    fetchApi();\n  }\n\n  function getTodos() { // esta função pega e seta as tarefas.\n    const fetchApi = async () => {\n      const todos = await fetchTodos();\n      if(!todos) {\n        console.log('Erro ao buscar pendências.\\n');\n      }\n      setTodos(todos);\n      setTodosFiltered(todos);\n    }\n    fetchApi();\n  }\n\n  function getUsers() { // função que pegará e setará usuãrios no contexto.\n    const fetchApi = async () => {\n      const users = await fetchUsers();\n      if(!users) {\n        console.log('Erro ao buscar usuários.\\n');\n      }\n      setUsers(users);\n    }\n    fetchApi();\n  }\n  useEffect(() => {\n    if(posts.length !== 0) {\n      window.localStorage.setItem('posts',JSON.stringify(posts));\n    }\n    if(users.length !== 0) {\n      window.localStorage.setItem('users', JSON.stringify(users));\n    }\n    if(albuns.length !== 0) {\n      window.localStorage.setItem('albuns', JSON.stringify(albuns));\n    }\n    if(todos.length !== 0) {\n      window.localStorage.setItem('todos', JSON.stringify(todos));\n    }\n  }, [posts, users, albuns, todos]);\n\n  useEffect(() => { // useEffect passando um array vazio no segundo parâmetro se assemelha a um componentDidMount.\n    getPosts();\n    getAlbuns();\n    getTodos();\n    getUsers();\n  }, []);\n\n  const dataValue = { // aqui são os dados que serão acessíveis através do Contexto.\n    posts,\n    albuns,\n    todos,\n    users,\n    postsFiltered,\n    setPostsFiltered,\n    albunsFiltered,\n    setAlbunsFiltered,\n    todosFiltered,\n    setTodosFiltered,\n  };\n\n  return (\n    <Context.Provider value={ dataValue } >\n      { children }\n    </Context.Provider>\n  );\n}\nProvider.propTypes = {\n  children: node,\n}.isRequired;\nexport default Provider;","import React from 'react';\nimport './App.css';\nimport Routes from './Routes';\nimport Provider from './context/Provider';\n// import 'bootstrap/dist/css/bootstrap.'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider>\n        <Routes/>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter as Router } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}